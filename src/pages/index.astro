---
import fs from 'fs';
import path from 'path';
import { parseChannels } from '../utils/parseChannels';
import CategorySection from '../components/CategorySection.astro';

// Read the markdown file
const markdownContent = fs.readFileSync(
	path.join(process.cwd(), 'categorized_channels.md'),
	'utf-8'
);

// Parse the channels
const categories = parseChannels(markdownContent);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Yedidya’s Dev Picks</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body>
		<header class="hero">
			<div class="container">
				<div class="hero-content">
					<h1>Yedidya’s Dev Picks</h1>
					<p class="subtitle">Your curated collection of educational YouTube channels for developers</p>
				</div>
				<div class="hero-stats">
					<div class="stat">
						<span class="number">{categories.reduce((acc, cat) => acc + cat.subcategories.reduce((acc, sub) => acc + sub.channels.length, 0), 0)}</span>
						<span class="label">Channels</span>
					</div>
					<div class="stat">
						<span class="number">{categories.length}</span>
						<span class="label">Categories</span>
					</div>
				</div>
			</div>
			<div class="hero-wave"></div>
		</header>

		<main class="container">
			<div class="categories-grid">
				{categories.map((category) => (
					<CategorySection category={category} />
				))}
			</div>
		</main>

		<footer>
			<div class="container">
				<p>Made with ❤️ for developers</p>
			</div>
		</footer>
	</body>
</html>

<style>
	:root {
		--primary: #7c3aed;
		--primary-dark: #6d28d9;
		--primary-light: #a78bfa;
		--accent: #f59e0b;
		--accent-dark: #d97706;
		--surface-1: #ffffff;
		--surface-2: #f8fafc;
		--surface-3: #f1f5f9;
		--text-1: #0f172a;
		--text-2: #475569;
		--text-3: #94a3b8;
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--primary: #8b5cf6;
			--primary-dark: #7c3aed;
			--primary-light: #a78bfa;
			--accent: #f59e0b;
			--accent-dark: #d97706;
			--surface-1: #0f172a;
			--surface-2: #1e293b;
			--surface-3: #334155;
			--text-1: #f8fafc;
			--text-2: #e2e8f0;
			--text-3: #94a3b8;
		}
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	body {
		font-family: 'Inter', system-ui, -apple-system, sans-serif;
		line-height: 1.5;
		background: var(--surface-1);
		color: var(--text-1);
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1.5rem;
	}

	.hero {
		background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
		color: white;
		padding: 6rem 0;
		text-align: center;
		margin-bottom: 4rem;
		position: relative;
		overflow: hidden;
	}

	.hero::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
		pointer-events: none;
	}

	.hero-content {
		position: relative;
		z-index: 1;
	}

	.hero h1 {
		font-size: 4.5rem;
		font-weight: 700;
		margin-bottom: 1.5rem;
		letter-spacing: -0.02em;
		text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	}

	.hero .subtitle {
		font-size: 1.5rem;
		opacity: 0.9;
		margin-bottom: 2rem;
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}

	.hero-stats {
		display: flex;
		justify-content: center;
		gap: 2rem;
		margin-top: 3rem;
	}

	.stat {
		background: rgba(255, 255, 255, 0.1);
		padding: 1.5rem;
		border-radius: 12px;
		backdrop-filter: blur(10px);
		min-width: 150px;
	}

	.stat .number {
		display: block;
		font-size: 2.5rem;
		font-weight: 700;
		margin-bottom: 0.5rem;
	}

	.stat .label {
		font-size: 1rem;
		opacity: 0.8;
	}

	.hero-wave {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 100px;
		background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%23f8fafc' fill-opacity='1' d='M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,122.7C672,117,768,139,864,149.3C960,160,1056,160,1152,138.7C1248,117,1344,75,1392,53.3L1440,32L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
		background-size: cover;
		background-position: center;
	}

	.categories-grid {
		display: grid;
		gap: 3rem;
		margin-bottom: 4rem;
	}

	footer {
		background: var(--surface-2);
		padding: 2rem 0;
		text-align: center;
		color: var(--text-2);
	}

	@media (max-width: 768px) {
		.hero {
			padding: 4rem 0;
		}

		.hero h1 {
			font-size: 3rem;
		}

		.hero .subtitle {
			font-size: 1.25rem;
		}

		.hero-stats {
			flex-direction: column;
			align-items: center;
		}

		.stat {
			width: 100%;
			max-width: 200px;
		}
	}
</style>
